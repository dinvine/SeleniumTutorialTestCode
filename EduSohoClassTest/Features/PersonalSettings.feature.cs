// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EduSohoClassTest.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PersonalSettings")]
    public partial class PersonalSettingsFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "PersonalSettings.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PersonalSettings", "\tIn order to set infos of myself\r\n\tAs a user\r\n\tI want to set infomations in the s" +
                    "ettings page", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Upload image for avatar")]
        [NUnit.Framework.CategoryAttribute("negative")]
        [NUnit.Framework.TestCaseAttribute("test001", "Test1234", null)]
        public virtual void UploadImageForAvatar(string username, string password, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "negative"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Upload image for avatar", null, @__tags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given(string.Format("I success to  enter \"{0}\" username and \"{1}\" password to log in", username, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.And("hover on the avatar and click \"个人设置\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.And("click on the 头像设置", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.When("click 上传新头像", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 12
 testRunner.And("select image file and upload it", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.Then("the avatar is updated to the new image", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Personal info - Modify my personal info - Validation(use model)")]
        [NUnit.Framework.CategoryAttribute("negative")]
        public virtual void PersonalInfo_ModifyMyPersonalInfo_ValidationUseModel()
        {
            string[] tagsOfScenario = new string[] {
                    "negative"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Personal info - Modify my personal info - Validation(use model)", null, new string[] {
                        "negative"});
#line 20
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 21
 testRunner.Given("I success to  enter \"test001\" username and \"Test1234\" password to log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 22
 testRunner.And("hover on the avatar and click \"个人设置\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("click on the 基础信息", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "Name",
                            "Gender",
                            "ID",
                            "Mobile",
                            "Company",
                            "Job",
                            "Title",
                            "Signature",
                            "SelfIntro",
                            "MySpace",
                            "Weibo",
                            "Wechat",
                            "QQ"});
                table1.AddRow(new string[] {
                            "adfasdfasdfasdfasdfasdf",
                            "true",
                            "asdf",
                            "asdf",
                            "OnlineEducation",
                            "Tester",
                            "asdfasdfasdfasdf1341234!!#@",
                            "Hello, World",
                            "This is test info",
                            "adf",
                            "asdf",
                            "wechat",
                            "asdf"});
#line 24
 testRunner.When("I update my personal info", ((string)(null)), table1, "When ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "error"});
                table2.AddRow(new string[] {
                            "最多只能输入 18 个字符"});
                table2.AddRow(new string[] {
                            "请正确输入您的身份证号码"});
                table2.AddRow(new string[] {
                            "请输入正确的手机号"});
                table2.AddRow(new string[] {
                            "最多只能输入 24 个字符"});
                table2.AddRow(new string[] {
                            "地址不正确，须以http://或者https://开头。"});
                table2.AddRow(new string[] {
                            "地址不正确，须以http://或者https://开头。"});
                table2.AddRow(new string[] {
                            "请输入正确的QQ号"});
#line 27
 testRunner.Then("I can see errors below on the page", ((string)(null)), table2, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("should give response to invalid input in personal basic info page")]
        [NUnit.Framework.CategoryAttribute("negative")]
        public virtual void ShouldGiveResponseToInvalidInputInPersonalBasicInfoPage()
        {
            string[] tagsOfScenario = new string[] {
                    "negative"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("should give response to invalid input in personal basic info page", null, new string[] {
                        "negative"});
#line 38
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 39
 testRunner.Given("I success to  enter \"test001\" username and \"Test1234\" password to log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 40
 testRunner.And("hover on the avatar and click \"个人设置\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("click on the 基础信息", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "fieldName",
                            "inputValue",
                            "msg"});
                table3.AddRow(new string[] {
                            "真实姓名",
                            "a123456789012345678",
                            "最多只能输入 18 个字符"});
                table3.AddRow(new string[] {
                            "身份证号码",
                            "320508198001014880",
                            "请正确输入您的身份证号码"});
                table3.AddRow(new string[] {
                            "手机号码",
                            "29915559844",
                            "请输入正确的手机号"});
                table3.AddRow(new string[] {
                            "公司",
                            "MagicCloud Corp.",
                            ""});
                table3.AddRow(new string[] {
                            "职业",
                            "Test analyst",
                            ""});
                table3.AddRow(new string[] {
                            "头衔",
                            "intermediate tester so good a title i like",
                            "最多只能输入 24 个字符"});
                table3.AddRow(new string[] {
                            "个人签名",
                            "good better best",
                            ""});
                table3.AddRow(new string[] {
                            "自我介绍",
                            "impssible is nothing",
                            ""});
                table3.AddRow(new string[] {
                            "个人空间",
                            "github.com",
                            "地址不正确，须以http://或者https://开头。"});
                table3.AddRow(new string[] {
                            "微博",
                            "wechat.com",
                            "地址不正确，须以http://或者https://开头。"});
                table3.AddRow(new string[] {
                            "微信",
                            "dinvvvvv",
                            ""});
                table3.AddRow(new string[] {
                            "QQ",
                            "84745aaa",
                            "请输入正确的QQ号"});
#line 42
 testRunner.Then("msg should be there when inputValue is entered to fieldName as table below in per" +
                        "sonal basic info page", ((string)(null)), table3, "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("should be able to modify personal basic info page")]
        [NUnit.Framework.CategoryAttribute("positive")]
        public virtual void ShouldBeAbleToModifyPersonalBasicInfoPage()
        {
            string[] tagsOfScenario = new string[] {
                    "positive"};
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("should be able to modify personal basic info page", null, new string[] {
                        "positive"});
#line 59
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 60
 testRunner.Given("I success to  enter \"test001\" username and \"Test1234\" password to log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 61
 testRunner.And("hover on the avatar and click \"个人设置\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And("click on the 基础信息", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                            "fieldName",
                            "inputValue",
                            "msg"});
                table4.AddRow(new string[] {
                            "真实姓名",
                            "Daniel",
                            ""});
                table4.AddRow(new string[] {
                            "身份证号码",
                            "320508198001014885",
                            ""});
                table4.AddRow(new string[] {
                            "手机号码",
                            "19915559844",
                            ""});
                table4.AddRow(new string[] {
                            "公司",
                            "Lyra Edu\t Corp.",
                            ""});
                table4.AddRow(new string[] {
                            "职业",
                            "Test analyst",
                            ""});
                table4.AddRow(new string[] {
                            "头衔",
                            "intermediate tester",
                            ""});
                table4.AddRow(new string[] {
                            "个人签名",
                            "good better best",
                            ""});
                table4.AddRow(new string[] {
                            "自我介绍",
                            "impssible is nothing",
                            ""});
                table4.AddRow(new string[] {
                            "个人空间",
                            "http://github.com",
                            ""});
                table4.AddRow(new string[] {
                            "微博",
                            "http://weibo.com",
                            ""});
                table4.AddRow(new string[] {
                            "微信",
                            "dinvvvvv",
                            ""});
                table4.AddRow(new string[] {
                            "QQ",
                            "8474596357",
                            ""});
#line 63
 testRunner.When("msg should be there when inputValue is entered to fieldName as table below in per" +
                        "sonal basic info page", ((string)(null)), table4, "When ");
#line hidden
#line 77
 testRunner.And("click 保存 in personal basic info page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.Then("success message should show \"基础信息保存成功。\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

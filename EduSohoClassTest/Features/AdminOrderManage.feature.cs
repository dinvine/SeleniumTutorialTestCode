// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.1.0.0
//      SpecFlow Generator Version:3.1.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EduSohoClassTest.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("AdminOrderManage")]
    public partial class AdminOrderManageFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "AdminOrderManage.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "AdminOrderManage", "\tIn order to view the orders\r\n\tAs an admin\r\n\tI want to search for the orders by p" +
                    "articular conditions", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Should be able to search course order")]
        [NUnit.Framework.CategoryAttribute("positive")]
        [NUnit.Framework.TestCaseAttribute("课程订单", "2017-12-12 22:15", "2020-12-12 22:15", "订单状态", "支付方式", "课程名称", "", "11", null)]
        [NUnit.Framework.TestCaseAttribute("课程订单", "", "", "已付款", "支付方式", "课程名称", "", "57", null)]
        [NUnit.Framework.TestCaseAttribute("课程订单", "", "", "订单状态", "支付宝", "课程名称", "", "暂无订单记录", null)]
        [NUnit.Framework.TestCaseAttribute("课程订单", "", "", "订单状态", "支付方式", "课程名称", "EduSoHo", "19", null)]
        [NUnit.Framework.TestCaseAttribute("课程订单", "", "", "订单状态", "支付方式", "课程名称", "", "57", null)]
        [NUnit.Framework.TestCaseAttribute("班级订单", "2017-12-12 22:15", "2020-12-12 22:15", "订单状态", "支付方式", "班级编号", "", "1", null)]
        [NUnit.Framework.TestCaseAttribute("班级订单", "", "", "已付款", "支付方式", "班级编号", "", "5", null)]
        [NUnit.Framework.TestCaseAttribute("班级订单", "", "", "订单状态", "支付宝", "班级编号", "", "暂无订单记录", null)]
        [NUnit.Framework.TestCaseAttribute("班级订单", "", "", "订单状态", "支付方式", "订单号", "CR2015063016591966296", "1", null)]
        [NUnit.Framework.TestCaseAttribute("班级订单", "", "", "订单状态", "支付方式", "班级编号", "", "5", null)]
        public virtual void ShouldBeAbleToSearchCourseOrder(string 订单类型, string 起始时间, string 结束时间, string 订单状态, string 支付方式, string 关键词类型, string 关键词, string 结果数量, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "positive"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should be able to search course order", null, @__tags);
#line 7
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("I success to  enter \"admin\" username and \"5EstafeyEtre\" password to log in", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
 testRunner.And("hover on the avatar and click \"管理后台\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("I am in admin  order manage page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.When(string.Format("I select \"{0}\"订单类型 in the left menue", 订单类型), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 14
 testRunner.And(string.Format("I enter \"{0}\", \"{1}\", \"{2}\", \"{3}\", \"{4}\", \"{5}\" into the conditions", 起始时间, 结束时间, 订单状态, 支付方式, 关键词类型, 关键词), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("I click search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.Then(string.Format("there should be {0} search results", 结果数量), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
